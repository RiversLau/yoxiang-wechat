<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

    <beans profile="develop">
        <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <property name="maxIdle" value="${redis.develop.maxIdle}"/>
            <property name="maxTotal" value="${redis.develop.maxTotal}"/>
            <property name="testOnBorrow" value="${redis.develop.testOnBorrow}"/>
        </bean>

        <bean id="genericPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
            <property name="maxIdle" value="${redis.develop.maxIdle}"/>
            <property name="testOnBorrow" value="${redis.develop.testOnBorrow}"/>
        </bean>

        <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
            <constructor-arg name="poolConfig" ref="poolConfig"/>
            <constructor-arg name="host" value="${redis.develop.host}"/>
            <constructor-arg name="port" value="${redis.develop.port}"/>
            <constructor-arg name="timeout" value="${redis.develop.timeout}"/>
            <constructor-arg name="password" value="${redis.develop.pass}"/>
            <constructor-arg name="database" value="${redis.develop.database}"/>
        </bean>

        <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
            <property name="hostName" value="${redis.develop.host}"/>
            <property name="port" value="${redis.develop.port}"/>
            <property name="password" value="${redis.develop.pass}"/>
            <property name="database" value="${redis.develop.database}"/>
            <property name="timeout" value="${redis.develop.timeout}"/>
            <property name="poolConfig" ref="poolConfig"/>
        </bean>

        <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
            <property name="connectionFactory" ref="connectionFactory"/>
            <property name="keySerializer" ref="stringRedisSerializer"/>
            <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        </bean>

        <bean id='springCacheManager' class='org.springframework.data.redis.cache.RedisCacheManager'>
            <constructor-arg ref="redisTemplate"/>
        </bean>
    </beans>
</beans>